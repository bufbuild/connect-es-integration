// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file urlshortener/v1/urlshortener.proto (package urlshortener.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The request message containing the URL to be shortened.
 *
 * @generated from message urlshortener.v1.ShortenRequest
 */
export class ShortenRequest extends Message<ShortenRequest> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<ShortenRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "urlshortener.v1.ShortenRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShortenRequest {
    return new ShortenRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShortenRequest {
    return new ShortenRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShortenRequest {
    return new ShortenRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ShortenRequest | PlainMessage<ShortenRequest> | undefined, b: ShortenRequest | PlainMessage<ShortenRequest> | undefined): boolean {
    return proto3.util.equals(ShortenRequest, a, b);
  }
}

/**
 * The response message containing the shortened URL.
 *
 * @generated from message urlshortener.v1.ShortenResponse
 */
export class ShortenResponse extends Message<ShortenResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<ShortenResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "urlshortener.v1.ShortenResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShortenResponse {
    return new ShortenResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShortenResponse {
    return new ShortenResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShortenResponse {
    return new ShortenResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ShortenResponse | PlainMessage<ShortenResponse> | undefined, b: ShortenResponse | PlainMessage<ShortenResponse> | undefined): boolean {
    return proto3.util.equals(ShortenResponse, a, b);
  }
}

/**
 * The request message containing the short URL to be expanded.
 *
 * @generated from message urlshortener.v1.ExpandRequest
 */
export class ExpandRequest extends Message<ExpandRequest> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<ExpandRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "urlshortener.v1.ExpandRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpandRequest {
    return new ExpandRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpandRequest {
    return new ExpandRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpandRequest {
    return new ExpandRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ExpandRequest | PlainMessage<ExpandRequest> | undefined, b: ExpandRequest | PlainMessage<ExpandRequest> | undefined): boolean {
    return proto3.util.equals(ExpandRequest, a, b);
  }
}

/**
 * The response message containing the expanded URL.
 *
 * @generated from message urlshortener.v1.ExpandResponse
 */
export class ExpandResponse extends Message<ExpandResponse> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<ExpandResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "urlshortener.v1.ExpandResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExpandResponse {
    return new ExpandResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExpandResponse {
    return new ExpandResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExpandResponse {
    return new ExpandResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ExpandResponse | PlainMessage<ExpandResponse> | undefined, b: ExpandResponse | PlainMessage<ExpandResponse> | undefined): boolean {
    return proto3.util.equals(ExpandResponse, a, b);
  }
}

