// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file kitchensink.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message KitchenSinkRequest
 */
export class KitchenSinkRequest extends Message<KitchenSinkRequest> {
  /**
   * @generated from field: double requestDouble = 1;
   */
  requestDouble = 0;

  /**
   * @generated from field: float requestFloat = 2;
   */
  requestFloat = 0;

  /**
   * @generated from field: int32 requestInt32 = 3;
   */
  requestInt32 = 0;

  /**
   * @generated from field: int64 requestInt64 = 4;
   */
  requestInt64 = protoInt64.zero;

  /**
   * @generated from field: uint32 requestUint32 = 5;
   */
  requestUint32 = 0;

  /**
   * @generated from field: uint64 requestUint64 = 6;
   */
  requestUint64 = protoInt64.zero;

  /**
   * @generated from field: sint32 requestSint32 = 7;
   */
  requestSint32 = 0;

  /**
   * @generated from field: sint64 requestSint64 = 8;
   */
  requestSint64 = protoInt64.zero;

  /**
   * @generated from field: fixed32 requestFixed32 = 9;
   */
  requestFixed32 = 0;

  /**
   * @generated from field: fixed64 requestFixed64 = 10;
   */
  requestFixed64 = protoInt64.zero;

  /**
   * @generated from field: sfixed32 requestSfixed32 = 11;
   */
  requestSfixed32 = 0;

  /**
   * @generated from field: sfixed64 requestSfixed64 = 12;
   */
  requestSfixed64 = protoInt64.zero;

  /**
   * @generated from field: bool requestBool = 13;
   */
  requestBool = false;

  /**
   * @generated from field: string requestString = 14;
   */
  requestString = "";

  /**
   * @generated from field: bytes requestBytes = 15;
   */
  requestBytes = new Uint8Array(0);

  /**
   * @generated from field: map<string, bool> requestMapStringBool = 16;
   */
  requestMapStringBool: { [key: string]: boolean } = {};

  /**
   * @generated from field: repeated double requestRepeatedDouble = 17;
   */
  requestRepeatedDouble: number[] = [];

  /**
   * @generated from field: repeated float requestRepeatedFloat = 18;
   */
  requestRepeatedFloat: number[] = [];

  /**
   * @generated from field: repeated int32 requestRepeatedInt32 = 19;
   */
  requestRepeatedInt32: number[] = [];

  /**
   * @generated from field: repeated int64 requestRepeatedInt64 = 20;
   */
  requestRepeatedInt64: bigint[] = [];

  /**
   * @generated from field: repeated uint32 requestRepeatedUint32 = 21;
   */
  requestRepeatedUint32: number[] = [];

  /**
   * @generated from field: repeated uint64 requestRepeatedUint64 = 22;
   */
  requestRepeatedUint64: bigint[] = [];

  /**
   * @generated from field: repeated sint32 requestRepeatedSint32 = 23;
   */
  requestRepeatedSint32: number[] = [];

  /**
   * @generated from field: repeated sint64 requestRepeatedSint64 = 24;
   */
  requestRepeatedSint64: bigint[] = [];

  /**
   * @generated from field: repeated fixed32 requestRepeatedFixed32 = 25;
   */
  requestRepeatedFixed32: number[] = [];

  /**
   * @generated from field: repeated fixed64 requestRepeatedFixed64 = 26;
   */
  requestRepeatedFixed64: bigint[] = [];

  /**
   * @generated from field: repeated sfixed32 requestRepeatedSfixed32 = 27;
   */
  requestRepeatedSfixed32: number[] = [];

  /**
   * @generated from field: repeated sfixed64 requestRepeatedSfixed64 = 28;
   */
  requestRepeatedSfixed64: bigint[] = [];

  /**
   * @generated from field: repeated bool requestRepeatedBool = 29;
   */
  requestRepeatedBool: boolean[] = [];

  /**
   * @generated from field: repeated string requestRepeatedString = 30;
   */
  requestRepeatedString: string[] = [];

  /**
   * @generated from field: repeated bytes requestRepeatedBytes = 31;
   */
  requestRepeatedBytes: Uint8Array[] = [];

  constructor(data?: PartialMessage<KitchenSinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "KitchenSinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "requestDouble", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "requestFloat", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "requestInt32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "requestInt64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "requestUint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "requestUint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "requestSint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */ },
    { no: 8, name: "requestSint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */ },
    { no: 9, name: "requestFixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */ },
    { no: 10, name: "requestFixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */ },
    { no: 11, name: "requestSfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */ },
    { no: 12, name: "requestSfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */ },
    { no: 13, name: "requestBool", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "requestString", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "requestBytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 16, name: "requestMapStringBool", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 8 /* ScalarType.BOOL */} },
    { no: 17, name: "requestRepeatedDouble", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 18, name: "requestRepeatedFloat", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 19, name: "requestRepeatedInt32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 20, name: "requestRepeatedInt64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 21, name: "requestRepeatedUint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 22, name: "requestRepeatedUint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 23, name: "requestRepeatedSint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 24, name: "requestRepeatedSint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 25, name: "requestRepeatedFixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 26, name: "requestRepeatedFixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 27, name: "requestRepeatedSfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 28, name: "requestRepeatedSfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 29, name: "requestRepeatedBool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 30, name: "requestRepeatedString", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 31, name: "requestRepeatedBytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KitchenSinkRequest {
    return new KitchenSinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KitchenSinkRequest {
    return new KitchenSinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KitchenSinkRequest {
    return new KitchenSinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: KitchenSinkRequest | PlainMessage<KitchenSinkRequest> | undefined, b: KitchenSinkRequest | PlainMessage<KitchenSinkRequest> | undefined): boolean {
    return proto3.util.equals(KitchenSinkRequest, a, b);
  }
}

/**
 * @generated from message KitchenSinkResponse
 */
export class KitchenSinkResponse extends Message<KitchenSinkResponse> {
  /**
   * @generated from field: double responseDouble = 1;
   */
  responseDouble = 0;

  /**
   * @generated from field: float responseFloat = 2;
   */
  responseFloat = 0;

  /**
   * @generated from field: int32 responseInt32 = 3;
   */
  responseInt32 = 0;

  /**
   * @generated from field: int64 responseInt64 = 4;
   */
  responseInt64 = protoInt64.zero;

  /**
   * @generated from field: uint32 responseUint32 = 5;
   */
  responseUint32 = 0;

  /**
   * @generated from field: uint64 responseUint64 = 6;
   */
  responseUint64 = protoInt64.zero;

  /**
   * @generated from field: sint32 responseSint32 = 7;
   */
  responseSint32 = 0;

  /**
   * @generated from field: sint64 responseSint64 = 8;
   */
  responseSint64 = protoInt64.zero;

  /**
   * @generated from field: fixed32 responseFixed32 = 9;
   */
  responseFixed32 = 0;

  /**
   * @generated from field: fixed64 responseFixed64 = 10;
   */
  responseFixed64 = protoInt64.zero;

  /**
   * @generated from field: sfixed32 responseSfixed32 = 11;
   */
  responseSfixed32 = 0;

  /**
   * @generated from field: sfixed64 responseSfixed64 = 12;
   */
  responseSfixed64 = protoInt64.zero;

  /**
   * @generated from field: bool responseBool = 13;
   */
  responseBool = false;

  /**
   * @generated from field: string responseString = 14;
   */
  responseString = "";

  /**
   * @generated from field: bytes responseBytes = 15;
   */
  responseBytes = new Uint8Array(0);

  /**
   * @generated from field: map<string, bool> responseMapStringBool = 16;
   */
  responseMapStringBool: { [key: string]: boolean } = {};

  /**
   * @generated from field: repeated double responseRepeatedDouble = 17;
   */
  responseRepeatedDouble: number[] = [];

  /**
   * @generated from field: repeated float responseRepeatedFloat = 18;
   */
  responseRepeatedFloat: number[] = [];

  /**
   * @generated from field: repeated int32 responseRepeatedInt32 = 19;
   */
  responseRepeatedInt32: number[] = [];

  /**
   * @generated from field: repeated int64 responseRepeatedInt64 = 20;
   */
  responseRepeatedInt64: bigint[] = [];

  /**
   * @generated from field: repeated uint32 responseRepeatedUint32 = 21;
   */
  responseRepeatedUint32: number[] = [];

  /**
   * @generated from field: repeated uint64 responseRepeatedUint64 = 22;
   */
  responseRepeatedUint64: bigint[] = [];

  /**
   * @generated from field: repeated sint32 responseRepeatedSint32 = 23;
   */
  responseRepeatedSint32: number[] = [];

  /**
   * @generated from field: repeated sint64 responseRepeatedSint64 = 24;
   */
  responseRepeatedSint64: bigint[] = [];

  /**
   * @generated from field: repeated fixed32 responseRepeatedFixed32 = 25;
   */
  responseRepeatedFixed32: number[] = [];

  /**
   * @generated from field: repeated fixed64 responseRepeatedFixed64 = 26;
   */
  responseRepeatedFixed64: bigint[] = [];

  /**
   * @generated from field: repeated sfixed32 responseRepeatedSfixed32 = 27;
   */
  responseRepeatedSfixed32: number[] = [];

  /**
   * @generated from field: repeated sfixed64 responseRepeatedSfixed64 = 28;
   */
  responseRepeatedSfixed64: bigint[] = [];

  /**
   * @generated from field: repeated bool responseRepeatedBool = 29;
   */
  responseRepeatedBool: boolean[] = [];

  /**
   * @generated from field: repeated string responseRepeatedString = 30;
   */
  responseRepeatedString: string[] = [];

  /**
   * @generated from field: repeated bytes responseRepeatedBytes = 31;
   */
  responseRepeatedBytes: Uint8Array[] = [];

  constructor(data?: PartialMessage<KitchenSinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "KitchenSinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "responseDouble", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 2, name: "responseFloat", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "responseInt32", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "responseInt64", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 5, name: "responseUint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "responseUint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "responseSint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */ },
    { no: 8, name: "responseSint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */ },
    { no: 9, name: "responseFixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */ },
    { no: 10, name: "responseFixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */ },
    { no: 11, name: "responseSfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */ },
    { no: 12, name: "responseSfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */ },
    { no: 13, name: "responseBool", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "responseString", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "responseBytes", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 16, name: "responseMapStringBool", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 8 /* ScalarType.BOOL */} },
    { no: 17, name: "responseRepeatedDouble", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 18, name: "responseRepeatedFloat", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 19, name: "responseRepeatedInt32", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 20, name: "responseRepeatedInt64", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 21, name: "responseRepeatedUint32", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 22, name: "responseRepeatedUint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 23, name: "responseRepeatedSint32", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 24, name: "responseRepeatedSint64", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 25, name: "responseRepeatedFixed32", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 26, name: "responseRepeatedFixed64", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 27, name: "responseRepeatedSfixed32", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 28, name: "responseRepeatedSfixed64", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 29, name: "responseRepeatedBool", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 30, name: "responseRepeatedString", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 31, name: "responseRepeatedBytes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KitchenSinkResponse {
    return new KitchenSinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KitchenSinkResponse {
    return new KitchenSinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KitchenSinkResponse {
    return new KitchenSinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: KitchenSinkResponse | PlainMessage<KitchenSinkResponse> | undefined, b: KitchenSinkResponse | PlainMessage<KitchenSinkResponse> | undefined): boolean {
    return proto3.util.equals(KitchenSinkResponse, a, b);
  }
}

